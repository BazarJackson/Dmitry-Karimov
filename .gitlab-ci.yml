stages:
  - build
  - scan
  - deploy

build_image:
  stage: build
  image: docker:27
  services:
    - name: docker:27-dind
      alias: docker
  script:
    - echo "$DOCKER_HUB_PASSWD" | docker login -u $DOCKER_HUB_LOGIN --password-stdin
    - docker build -t $IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $IMAGE:$CI_COMMIT_SHORT_SHA

trivy_scan:
  stage: scan
  image:
    name: aquasec/trivy:0.56.0
    entrypoint: [""]
  script:
    - echo "Running Trivy security scan on Docker image..."
    - trivy image --image-config-scanners misconfig,secret --format json -o trivy-report.json $IMAGE:$CI_COMMIT_SHORT_SHA
  artifacts:
    paths:
      - trivy-report.json

semgrep_scan:
  stage: scan
  image: returntocorp/semgrep:latest
  script:
    - semgrep --config auto --json --output semgrep-report.json $CI_PROJECT_DIR
  artifacts:
    paths:
      - semgrep-report.json

bandit_scan:
  stage: scan
  image: python:3.12.6
  before_script:
    - pip install bandit
  script:
    - bandit -r calculate.py -f json -o bandit-report.json || true
    - cat bandit-report.json
  artifacts:
    paths:
      - bandit-report.json

deploy&test:
  stage: deploy
  image: docker:27
  services:
    - name: $IMAGE:$CI_COMMIT_SHORT_SHA
      alias: calculator
  script:
    - echo "Deploying and testing Docker container..."
    - apk add curl
    - |
        curl -X POST http://calculator:5000/calculate \
          -H "Content-Type: application/json" \
          -d '{"a": 10, "b": 7, "operator": "*"}'
    - |
        curl -X POST http://calculator:5000/calculate \
          -H "Content-Type: application/json" \
          -d '{"a": 10, "b": 0, "operator": "/"}'
    - |
        curl -X POST http://calculator:5000/calculate \
          -H "Content-Type: application/json" \
          -d '{"a": 10, "b": 7, "operator": "e"}'
